version: "3"

services:
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -d $POSTGRES_DB -U $POSTGRES_USER' ]
      interval: 10s
      timeout: 5s
      retries: 10

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
        - .:/app

  celery:
    build: .
    tty: true
    restart: on-failure
    command: celery -A config worker -P eventlet -l info
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - app
    volumes:
      - .:/app

  celery-beat:
    build: .
    tty: true
    restart: on-failure
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - redis
      - app
    volumes:
      - .:/app

volumes:
  pg_data: